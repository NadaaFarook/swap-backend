// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id                 Int    @id @default(autoincrement())
  userAddresss       String
  fee                String
  inputTokenAddress  String
  outputTokenAddress String
  inputAmount        String
  outputAmount       String
  transactionHash    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pool      Pool?    @relation(fields: [poolId], references: [id])
  poolId    Int?
}

model Pool {
  id             Int    @id @default(autoincrement())
  userAddresss   String
  t1TokenName    String
  t2TokenName    String
  t1TokenAddress String
  t2TokenAddress String
  name           String
  poolAddress    String

  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AIAgent {
  id Int @id @default(autoincrement())
  agentAddress String
  agentName String
  ownerAddress String
  seedPhrase String
  walletId String

  positions Position[]
}

model Position {
  id Int @id @default(autoincrement())
  buyTokenAddress String
  networkId String
  sellTokenAddress String
  buyOnPercentage Int
  sellOnPercentage Int
  buyDcaToken Int
  sellDcaToken Int

  lastBuyTokenPrice Int @default(0)

  aiAgentId Int
  aiAgent AIAgent @relation(fields: [aiAgentId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}